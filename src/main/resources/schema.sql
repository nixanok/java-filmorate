DROP TABLE IF EXISTS FILM_GENRE;
DROP TABLE IF EXISTS FRIENDS;
DROP TABLE IF EXISTS USERS_LIKES_FILMS;
DROP TABLE IF EXISTS FILMS;
DROP TABLE IF EXISTS MPA;
DROP TABLE IF EXISTS GENRE;
DROP TABLE IF EXISTS USERS;

CREATE TABLE IF NOT EXISTS PUBLIC.MPA (
	MPA_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(64) NOT NULL,
	CONSTRAINT MPA_PK PRIMARY KEY (MPA_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PK_MPA_INDEX ON PUBLIC.MPA (MPA_ID);
INSERT INTO MPA (NAME) VALUES ('G'), ('PG'), ('PG-13'), ('R'), ('NC-17');

CREATE TABLE IF NOT EXISTS PUBLIC.FILMS (
	FILM_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(255) NOT NULL,
	DESCRIPTION CHARACTER VARYING(255) NOT NULL,
	RELEASE_DATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	MPA_ID INTEGER DEFAULT 1,
	CONSTRAINT FILMS_PK PRIMARY KEY (FILM_ID),
	CONSTRAINT FILMS_MPA_FK FOREIGN KEY (MPA_ID) REFERENCES PUBLIC.MPA(MPA_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PK_FILMS_INDEX ON PUBLIC.FILMS (FILM_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
	GENRE_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING(64) NOT NULL,
	CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PK_GENRE_INDEX ON PUBLIC.GENRE (GENRE_ID);

INSERT INTO GENRE (name) VALUES ('Комедия'), ('Драма'), ('Мультфильм'), ('Триллер'), ('Документальный'), ('Боевик');

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_GENRE (
	FILM_ID INTEGER NOT NULL,
	GENRE_ID INTEGER NOT NULL,
	CONSTRAINT FILM_GENRE_PK PRIMARY KEY (FILM_ID, GENRE_ID),
	CONSTRAINT FILM_GENRE_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID),
	CONSTRAINT FILM_GENRE_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(GENRE_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PK_FILM_GENRE_INDEX ON PUBLIC.FILM_GENRE (FILM_ID,GENRE_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.USERS(
	USER_ID INTEGER NOT NULL AUTO_INCREMENT,
	LOGIN CHARACTER VARYING(255) NOT NULL,
	NAME CHARACTER VARYING(255) NOT NULL,
	EMAIL CHARACTER VARYING(255) NOT NULL,
	BIRTHDAY DATE,
	CONSTRAINT USERS_PK PRIMARY KEY (USER_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS PK_USERS_INDEX ON PUBLIC.USERS (USER_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.USERS_LIKES_FILMS (
	USER_ID INTEGER NOT NULL,
	FILM_ID INTEGER NOT NULL,
	CONSTRAINT USERS_LIKES_FILMS_PK PRIMARY KEY (USER_ID,FILM_ID),
	CONSTRAINT USERS_LIKES_FILMS_USER_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID),
	CONSTRAINT USERS_LIKES_FILMS_FILM_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID)
	
);
CREATE UNIQUE INDEX IF NOT EXISTS PK_USERS_LIKES_FILMS_INDEX ON PUBLIC.USERS_LIKES_FILMS (USER_ID,FILM_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDS (
	FIRST_ID INTEGER NOT NULL,
	SECOND_ID INTEGER NOT NULL,
	CONSTRAINT FRIENDS_PK PRIMARY KEY (FIRST_ID, SECOND_ID),
	CONSTRAINT FRIENDS_FIRST_ID_FK FOREIGN KEY (FIRST_ID) REFERENCES PUBLIC.USERS(USER_ID),
	CONSTRAINT FRIENDS_SECOND_ID_FK FOREIGN KEY (SECOND_ID) REFERENCES PUBLIC.USERS(USER_ID)
);
CREATE INDEX IF NOT EXISTS PK_FRIENDS_INDEX ON PUBLIC.FRIENDS (FIRST_ID, SECOND_ID);







